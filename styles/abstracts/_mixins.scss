// Button component styles
@mixin flex-box(
  $direction: row,
  $justify: center,
  $align: center,
  $gap: 0,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
  flex-wrap: $wrap;
}

// Button mixin for creating different variants
@mixin button($bg-color, $text-color, $border-color: null) {
  background-color: $bg-color;
  color: $text-color;
  border: 2px solid if($border-color, $border-color, $bg-color);

  &:hover:not(:disabled) {
    background-color: darken($bg-color, 8%);
    border-color: darken(if($border-color, $border-color, $bg-color), 8%);
  }

  &:active:not(:disabled) {
    background-color: darken($bg-color, 12%);
    border-color: darken(if($border-color, $border-color, $bg-color), 12%);
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($bg-color, 0.4);
  }
}
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin transition($property: all, $duration: 0.3s, $easing: ease) {
  transition: $property $duration $easing;
}

@mixin gradient-bg($angle: 135deg, $color1: #f5f7ff, $color2: #e8ecff) {
  background: linear-gradient($angle, $color1 0%, $color2 100%);
}

@mixin media-min($breakpoint) {
  @media (min-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

@mixin media-max($breakpoint) {
  @media (max-width: map-get($breakpoints, $breakpoint)) {
    @content;
  }
}

@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}